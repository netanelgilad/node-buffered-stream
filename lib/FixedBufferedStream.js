// Generated by CoffeeScript 1.4.0
var BufferedStream, stream, util;

stream = require('stream');

util = require('util');

BufferedStream = function(size) {
  if (size == null) {
    size = 1024 * 1024;
  }
  this.writable = true;
  this.readable = true;
  this.size = size;
  this.buffer = new Buffer(size);
  this.bufferPos = 0;
  return stream.call(this);
};

BufferedStream.prototype.__proto__ = stream.prototype;

BufferedStream.prototype.write = function(data) {
  var buffer, dataWritten;
  if (!Buffer.isBuffer(data)) {
    data = new Buffer(data);
  }
  dataWritten = Math.min(this.size - this.bufferPos, data.length);
  if (dataWritten !== 0) {
    data.copy(this.buffer, this.bufferPos, 0, dataWritten);
  }
  this.bufferPos += dataWritten;
  if (dataWritten !== data.length) {
    buffer = new Buffer(this.bufferPos);
    this.buffer.copy(buffer, 0, 0, this.bufferPos);
    this.emit('data', buffer);
    data.copy(this.buffer, 0, dataWritten, data.length);
    this.bufferPos = data.length - dataWritten;
  }
  return this.paused;
};

BufferedStream.prototype.pause = function(data) {
  return this.paused = true;
};

BufferedStream.prototype.resume = function(data) {
  this.paused = false;
  return this.emit('drain');
};

BufferedStream.prototype.end = function() {
  this.emit('data', this.buffer.slice(0, this.bufferPos));
  this.writable = false;
  this.readable = false;
  return this.emit('end');
};

module.exports = BufferedStream;
